from collections import defaultdict
from math import ceil

def cal_time(IN,OUT):
    return 60*(int(OUT[:2])-int(IN[:2])) + int(OUT[3:5]) - int(IN[3:5])

def cal_fee(t,fees):
    fee = fees[1]
    t -= fees[0]
    if t>0:fee += fees[-1]*ceil(t/fees[2])
    return fee

def solution(fees, records):
    answer = []
    d = {}
    time = defaultdict(int)
    fee = {}
    for inf in records:
        inf = inf.split()
        if inf[-1] == 'IN':d[inf[1]] = inf[0]
        else:
            time[inf[1]] += cal_time(d[inf[1]],inf[0])
            del d[inf[1]]
    for k in d.keys():time[k] += cal_time(d[k],"23:59") # 출차기록이 없을 경우
    for k in sorted(time.keys()):answer.append(cal_fee(time[k],fees)) # 요금 계산
    return answer